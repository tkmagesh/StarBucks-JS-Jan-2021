BDD
    Behavior Driven Development

3 Amigos
    The Product Owner
        Define the product
        Define the features

    The Tester

    The Developers

Examples
    Describes how the software is intended to behave
    illustrate a particular business rule or requirement

10 Add 20 = 30
10 Subtract 20 = -10
10.3 Add 20.5 = 30.8

BDD is example based
BDD is not solely a testing technique

Advantages
    Collbaration
    Everyone speaks the same language
    Breakdown
    Shared understanding
    Examples can be used as executable artifacts that drive test automation

DSL - Domain Specific Language
Gherkin


Unit Test
    Arrange
    Act
    Assert


Scenario for the withdraw feature of an ATM

Feature: Withdraw Money
    A customer should be able to withdraw cash from the ATM at any given time

    Scenario: Withdraw cash with money available
    Given I have sufficient funds in my account
    When I select the withdraw option
    And mention the amount to withdraw
    Then I should get cash
    And the funds in my account are adjusted


Tests

requirement document
    identified by unique ids

Tests
    Tests are mapped to the corresponding requirement

Cucumber
    tool that can be used to execute Gherkin Statements
    It works in the following steps:
        It reads each line of the Gherkin document
        Validates the Gherkin syntax
        Maps the Gherkin statements to tests
        Executes the tests
        It confirms the feature implementation to be successful based on the outcome of the tests


Tests
    Tool to simulate end user actions on a web application
        Selenium
        WebDriver
        Protractor
        cypress

cy.visit(myPage)
    .get('#txtN1')
    .type('Magesh')

cy.get('#btnGreet')
    .click()

cy.get('#divMessage')
    .should('contain', expectedMessage)


assert()
expect()
should()


assert.areEqual(actualResult,expectedResult)

expect(actualResult).toEqual(expectedResult)

actualResult.should.equal(expectedResult)

webpack

script1.js
script2.js
script3.js

AMD - Asynchronous Module Definition
require.js

script1.js
-----------
require([], function(){
    var x = 10;
    function fn(){

    };
    return x;
})

script2.js
-----------
require(['script1', 'script3'], function(x, y){

})

Build process
    Grunt
        Task Runner

    Gulp
    script1 + script2 + script3 = main.js

    webpack

1. ES6 to ES5
2. minify the JS files
3. uglify the JS files
4. bundle the JS files
5. version the JS file
6. use CSS preprocessing
7. minify the css files
8. bundle the css files
9. version the css file
10. update the references of the bundled js and css files in the index.html
11. minify the html page

bundle.30ouiwejl0823.js R-1

after 2 months

bundle.dsfjkswerwpqr.js R-2

SCSS
SASS
Less
Compass


@borderColor = 'blue'
h1{
    border-color : @borderColor;
}

h2{
    border-color : @borderColor;
}

webpack setup
npm install webpack webpack-cli --save-dev
npx webpack

for handling images use 'file-loader'
npm install file-loader --save-dev
update the config to use the file-loader

component = presentation (JSX) + UI Behavior + state
npm install style-loader css-loader --save-dev
update the config to use the style-loader and css-loader

Using babel
npm install @babel/core babel-loader @babel/preset-env --save-dev

    For react applications
    npm install @babel/preset-react --save-dev
    modify the config file to include the @babel/preset-react in the babel-loader 

Plugins
    to perform common tasks during the build process

    CleanWebpackPlugin
        clear the existing contents of the './dist' folder everytime a new build is created
        npm install clean-webpack-plugin --save-dev

    Terser
        minify & uglify javascript files
        By default including included in webpack and kicks in when the mode = "production"

    MiniCssExtractPlugin
        will extract the css contents from all the files in the app and create on css file for deployment
        npm isntall mini-css-extract-plugin --save-dev
        modify the config file to include the plugin
        and update the loader to use the plugin loader instead of 'style-loader'
    